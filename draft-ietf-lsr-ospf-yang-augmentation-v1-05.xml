<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY RFC2119 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
    <!ENTITY RFC3688 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3688.xml'>
    <!ENTITY RFC5246 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml'>
    <!ENTITY RFC5329 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5329.xml'>
    <!ENTITY RFC6020 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6020.xml'>
    <!ENTITY RFC6241 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6241.xml'>
    <!ENTITY RFC6242 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6242.xml'>
    <!ENTITY RFC6536 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6536.xml'>
    <!ENTITY RFC7950 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.7950.xml'>
    <!ENTITY RFC8022 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8022.xml'>
    <!ENTITY RFC8040 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8040.xml'>
    <!ENTITY RFC8042 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8042.xml'>
    <!ENTITY RFC8349 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8349.xml'>
    <!ENTITY RFC8379 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8379.xml'>
    <!ENTITY RFC8510 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8510.xml'>
    <!ENTITY RFC8920 PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8920.xml'>
    <!ENTITY I-D.ietf-ospf-yang PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml-ids/reference.I-D.ietf-ospf-yang'>
    <!ENTITY I-D.ietf-lsr-flex-algo PUBLIC ''
      'http://xml.resource.org/public/rfc/bibxml-ids/reference.I-D.ietf-lsr-flex-algo'>
    ]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="no" ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>

<?rfc rfcedstyle="yes" ?>
<?rfc subcompact="no" ?>

<rfc category="std" docName="draft-ietf-lsr-ospf-yang-augmentation-v1-05" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN"
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the
         full title is longer than 39 characters -->

  <title abbrev="OSPF YANG Augments V1">OSPF YANG Model Augmentations for Additional Features - Version 1 </title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Acee Lindem" initials="A." surname="Lindem">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>301 Midenhall Way</street>
          <city>Cary, NC 27513</city>
        </postal>
        <email>acee@cisco.com</email>
      </address>
    </author>
    <author fullname="Yingzhen Qu" initials="Y" surname="Qu">
      <organization>Futurewei</organization>
      <address>
        <postal>
          <street>2330 Central Expressway</street>
          <city>Santa Clara</city>
          <region>CA</region>
          <code>95050</code>
          <country>USA</country>
        </postal>
        <phone></phone>
        <email>yingzhen.qu@futurewei.com</email>
      </address>
    </author>
    <date/>

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill
         in the current day for you. If only the current year is specified, xml2rfc will fill
   in the current day and month for you. If the year is not the current one, it is
   necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the
   purpose of calculating the expiry date).  With drafts it is normally sufficient to
   specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Internet</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.
   If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>This document defines YANG data modules augmenting the IETF OSPF YANG
      model to provide support for Traffic Engineering Extensions to OSPF
      Version 3 as defined in RF 5329, OSPF Two-Part Metric as defined in RFC 8042,
      OSPF Graceful Link Shutdown as defined in RFC 8379 and OSPF Link-Local
      Signaling (LLS) Extensions for Local Interface ID Advertisement as defined
      in RFC 8510. </t>
    </abstract>
  </front>

  <middle>
    <section title="Overview">
      <t>YANG <xref target="RFC6020"></xref>  <xref target="RFC7950"></xref> is a
      data definition language
      used to define the contents of a conceptual data store
      that allows networked devices to be managed using NETCONF
      <xref target="RFC6241"/>.  YANG is proving relevant beyond its
      initial confines, as bindings to other interfaces (e.g., ReST) and
      encodings other than XML (e.g., JSON) are being defined.  Furthermore,
      YANG data models can be used as the basis for implementation of other
      interfaces, such as CLI and programmatic APIs.</t>

      <t>This document defines YANG data modules augmenting the IETF OSPF
      YANG model <xref target="I-D.ietf-ospf-yang"/>, which itself augments
      <xref target="RFC8349"/>, to provide support for configuration and
      operational state for the following OSPF features:
        <list style="hanging">
        <t hangText="RFC5329:">Traffic Engineering Extensions to OSPF Version 3 <xref target="RFC5329"/>.</t>
        <t hangText="RFC8042:">OSPF Two-Part Metric <xref target="RFC8042"/>.</t>
        <t hangText="RFC8379:">OSPF Graceful Link Shutdown <xref target="RFC8379"/>.</t>
        <t hangText="RFC8510:">OSPF Link-Local Signaling (LLS) Extensions for
          Local Interface ID Advertisement <xref target="RFC8510"/>.</t>
        <t hangText="RFC8920:">OSPF Application-Specific Link Attributes <xref target="RFC8920"/>.</t>
        <t hangText="RFCxxxx:">IGP Flexible Algorithm <xref target="I-D.ietf-lsr-flex-algo"/>.</t>
        </list>
      </t>

      <t>The augmentations defined in this document requires support for the
        OSPF base model<xref target="I-D.ietf-ospf-yang"></xref> which defines
        basic OSPF configuration and state. The OSPF YANG model augments the
        ietf-routing YANG model defined in <xref target="RFC8022"/>.
      </t>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref target="RFC2119"></xref>.</t>
      </section>
    </section>

  <section title="YANG Module for Traffic Engineering Extesions to OSPF Version 3">
    <t>This document defines a YANG module for Traffic Engineering Extersions to OSPF
      Version 3 as defined in <xref target="RFC5329"/>. It is an augmentation of the OSPF
      base model. </t>

    <figure align="left">
      <artwork align="left">
module: ietf-ospfv3-te
augment /rt:routing/rt:control-plane-protocols
        /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
        /ospf:database/ospf:area-scope-lsa-type/ospf:area-scope-lsas
        /ospf:area-scope-lsa/ospf:version/ospf:ospfv3/ospf:ospfv3
        /ospf:body:
  +--ro ospfv3-intra-area-te
     +--ro router-address-tlv
     |  +--ro router-address?   inet:ipv6-address
     +--ro link-tlv
        +--ro link-type                   ospf:router-link-type
        +--ro local-if-ipv6-addrs
        |  +--ro local-if-ipv6-addr*   inet:ipv6-address
        +--ro remote-if-ipv6-addrs
        |  +--ro remote-if-ipv6-addr*   inet:ipv6-address
        +--ro te-metric?                  uint32
        +--ro max-bandwidth?
        |      rt-types:bandwidth-ieee-float32
        +--ro max-reservable-bandwidth?
        |      rt-types:bandwidth-ieee-float32
        +--ro unreserved-bandwidths
        |  +--ro unreserved-bandwidth*
        |     +--ro priority?               uint8
        |     +--ro unreserved-bandwidth?
        |            rt-types:bandwidth-ieee-float32
        +--ro admin-group?                uint32
        +--ro neighbor-id
        |  +--ro nbr-interface-id    inet:ipv4-address
        |  +--ro nbr-router-id       yang:dotted-quad
        +--ro unknown-tlvs
           +--ro unknown-tlv*
              +--ro type?     uint16
              +--ro length?   uint16
              +--ro value?    yang:hex-string
      </artwork>
    </figure>
        <t>
    <figure>
      <artwork><![CDATA[
<CODE BEGINS> file "ietf-ospfv3-te@2020-04-24.yang"
module ietf-ospfv3-te {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-ospfv3-te";

  prefix ospfv3-te;

  import ietf-inet-types {
    prefix "inet";
    reference "RFC 6991: Common YANG Data Types";
  }

  import ietf-yang-types {
    prefix "yang";
    reference "RFC 6991: Common YANG Data Types";
  }

  import ietf-routing-types {
    prefix "rt-types";
    reference "RFC 8294: Common YANG Data Types for the
               Routing Area";
  }

  import ietf-routing {
    prefix "rt";
  }

  import ietf-ospf {
    prefix "ospf";
  }

  organization
    "IETF LSR - Link State Routing Working Group";

  contact
     "WG Web:   <http://tools.ietf.org/wg/lsr>
      WG List:  <mailto:lsr@ietf.org>

      Author:   Yingzhen Qu
                <mailto:yqu@futurewei.com>
      Author:   Acee Lindem
                <mailto:acee@cisco.com>";

  description
    "This YANG module defines the configuration and operational
    state for OSPFv3 extensions to support intra-area Traffic
    Engineering (TE) as defined in RFC 5329.

     Copyright (c) 2019 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX;
     see the RFC itself for full legal notices.";

  reference "RFC XXXX";

  revision 2020-04-24 {
    description
      "Initial version";
    reference
      "RFC XXXX: A YANG Data Model for OSPFv3 TE.";
  }

  identity ospfv3-intra-area-te-lsa {
    base ospf:ospfv3-lsa-type;
    description
      "OSPFv3 Intrea-area TE LSA.";
  }

  grouping ospfv3-intra-area-te {
    description "Grouping for OSPFv3 intra-area-te-lsa.";
    container ospfv3-intra-area-te {
      container router-address-tlv {
        description "The router IPv6 address tlv advertises a
                     reachable IPv6 address.";
        leaf router-address {
          type inet:ipv6-address;
          description
            "Router IPv6 address.";
        }
      }

      container link-tlv {
        description "Describes a singel link, and it is constructed
                     of a set of Sub-TLVs.";
        leaf link-type {
          type ospf:router-link-type;
          mandatory true;
          description "Link type.";
        }

        container local-if-ipv6-addrs {
          description "All local interface IPv6 addresses.";
          leaf-list local-if-ipv6-addr {
            type inet:ipv6-address;
            description
              "List of local interface IPv6 addresses.";
          }
        }

        container remote-if-ipv6-addrs {
          description "All remote interface IPv6 addresses.";
          leaf-list remote-if-ipv6-addr {
            type inet:ipv6-address;
            description
              "List of remote interface IPv6 addresses.";
          }
        }

        leaf te-metric {
          type uint32;
          description "TE metric.";
        }

        leaf max-bandwidth {
          type rt-types:bandwidth-ieee-float32;
          description "Maximum bandwidth.";
        }

        leaf max-reservable-bandwidth {
          type rt-types:bandwidth-ieee-float32;
          description "Maximum reservable bandwidth.";
        }

        container unreserved-bandwidths {
          description "All unreserved bandwidths.";
          list unreserved-bandwidth {
            leaf priority {
              type uint8 {
                range "0 .. 7";
              }
              description "Priority from 0 to 7.";
            }
            leaf unreserved-bandwidth {
              type rt-types:bandwidth-ieee-float32;
              description "Unreserved bandwidth.";
            }
            description
              "List of unreserved bandwidths for different
               priorities.";
          }
        }

        leaf admin-group {
          type uint32;
          description
            "Administrative group/Resource Class/Color.";
        }

        container neighbor-id {
          description "Neighbor link identitification.";
          leaf nbr-interface-id {
            type inet:ipv4-address;
            mandatory true;
            description "The neighbor's interface ID.";
          }
          leaf nbr-router-id {
            type yang:dotted-quad;
            mandatory true;
            description "The neighbor's router ID.";
          }
        }

        uses ospf:unknown-tlvs;
      }

      description "OSPFv3 Intra-Area-TE-LSA.";
      reference "RFC 5329: Traffic Engineering Extensions to OSPF
              :   Version 3.";
    }
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol/"
        + "ospf:ospf/ospf:areas/"
        + "ospf:area/ospf:database/"
        + "ospf:area-scope-lsa-type/ospf:area-scope-lsas/"
        + "ospf:area-scope-lsa/ospf:version/ospf:ospfv3/"
        + "ospf:ospfv3/ospf:body" {
    when "../../../../../../../../../"
       + "rt:type = 'ospf:ospfv3'" {
      description
        "This augmentation is only valid for OSPFv3.";
    }
    description
      "OSPFv3 Intrea-Area-TE-LSA.";

    uses ospfv3-intra-area-te;
  }
}
  <CODE ENDS>
      ]]></artwork>
    </figure>
  </t>
  </section>
  <section title="YANG Module for OSPF Two-Part Metric">

    <t>This document defines a YANG module for OSPF Two-Part Metric feature as
      defined in <xref target="RFC8042"/>. It is an augmentation of the OSPF
      base model. </t>

    <figure align="left">
      <artwork align="left">
module: ietf-ospf-two-part-metric
augment /rt:routing/rt:control-plane-protocols
       /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
       /ospf:interfaces/ospf:interface:
 +--rw two-part-metric
    +--rw enable?           boolean
    +--rw int-input-cost?   ospf:ospf-link-metric
augment /rt:routing/rt:control-plane-protocols
       /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
       /ospf:database/ospf:area-scope-lsa-type/ospf:area-scope-lsas
       /ospf:area-scope-lsa/ospf:version/ospf:ospfv2/ospf:ospfv2
       /ospf:body/ospf:opaque/ospf:extended-link-opaque
       /ospf:extended-link-tlv:
 +--ro network-to-router-metric-sub-tlvs
    +--ro net-to-rtr-sub-tlv*
       +--ro mt-id?       uint8
       +--ro mt-metric?   uint16
augment /rt:routing/rt:control-plane-protocols
       /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
       /ospf:database/ospf:area-scope-lsa-type/ospf:area-scope-lsas
       /ospf:area-scope-lsa/ospf:version/ospf:ospfv2/ospf:ospfv2
       /ospf:body/ospf:opaque/ospf:te-opaque/ospf:link-tlv:
 +--ro network-to-router-te-metric?   uint32
augment /rt:routing/rt:control-plane-protocols
       /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
       /ospf:database/ospf:area-scope-lsa-type/ospf:area-scope-lsas
       /ospf:area-scope-lsa/ospf:version/ospf:ospfv3/ospf:ospfv3
       /ospf:body/ospfv3-te:ospfv3-intra-area-te/ospfv3-te:link-tlv:
 +--ro network-to-router-te-metric?   uint32
      </artwork>
    </figure>

        <t>
    <figure>
      <artwork><![CDATA[
<CODE BEGINS> file "ietf-ospf-two-part-metric@2020-04-24.yang"
module ietf-ospf-two-part-metric {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-ospf-two-part-metric";

  prefix ospf-two-metric;

  import ietf-routing {
    prefix "rt";
  }

  import ietf-ospf {
    prefix "ospf";
  }

  import ietf-ospfv3-te {
    prefix "ospfv3-te";
  }

  organization
    "IETF LSR - Link State Routing Working Group";

  contact
     "WG Web:   <http://tools.ietf.org/wg/lsr>
      WG List:  <mailto:lsr@ietf.org>

      Author:   Yingzhen Qu
                <mailto:yqu@futurewei.com>
      Author:   Acee Lindem
                <mailto:acee@cisco.com>";

  description
    "This YANG module defines the configuration and operational
    state for OSPF Two-Part Metric feature as defined in RFC 8042.

     Copyright (c) 2019 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX;
     see the RFC itself for full legal notices.";

  reference "RFC XXXX";

  revision 2020-04-24 {
    description
      "Initial version";
    reference
      "RFC XXXX: A YANG Data Model for OSPF.";
  }

  identity two-part-metric {
    base ospf:informational-capability;
    description
      "When set, the router is capable of supporting OSPF
       two-part metrics.";
    reference
      "RFC 8042: OSPF Two-Part Metric";
  }

  /* RFC 8042 */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/ospf:ospf/"
        + "ospf:areas/ospf:area/ospf:interfaces/ospf:interface" {
    when "../../../../../rt:type = 'ospf:ospfv2' or "
       + "../../../../../rt:type = 'ospf:ospfv3'" {
      description
        "This augments the OSPF interface configuration
         when used.";
    }
    description
      "This augments the OSPF protocol interface
       configuration with two-part metric.";

    container two-part-metric {
      when "enum-value(../ospf:interface-type) = 2" {
        description
          "Two-part metric when link type is multi-access.";
      }
      leaf enable {
        type boolean;
        default false;
        description
          "Enable two-part metric.";
      }
      leaf int-input-cost {
        type ospf:ospf-link-metric;
        description
          "Link state metric from the two-part-metric network
           to this router.";
      }
      description
        "Interface two part metric configuration.";
    }
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol/"
        + "ospf:ospf/ospf:areas/"
        + "ospf:area/ospf:database/"
        + "ospf:area-scope-lsa-type/ospf:area-scope-lsas/"
        + "ospf:area-scope-lsa/ospf:version/ospf:ospfv2/"
        + "ospf:ospfv2/ospf:body/ospf:opaque/"
        + "ospf:extended-link-opaque/ospf:extended-link-tlv" {
    when "../../../../../../../../../../../../"
       + "rt:type = 'ospf:ospfv2'" {
      description
        "This augmentation is only valid for OSPFv2.";
    }
    description
      "Network-to-Router metric sub tlv for OSPFv2 extended link TLV
       in type 10 opaque LSA.";

       container network-to-router-metric-sub-tlvs {
         description "Network-to-Router metric sub TLV.";
         list net-to-rtr-sub-tlv {
           leaf mt-id {
             type uint8;
             description "Multi-Topology Identifier (MT-ID).";
           }
           leaf mt-metric {
             type uint16;
             description "Network-to-router metric.";
           }
           description
             "Network-to-Router metric sub-TLV.";
         }
       }
    }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol/"
        + "ospf:ospf/ospf:areas/"
        + "ospf:area/ospf:database/"
        + "ospf:area-scope-lsa-type/ospf:area-scope-lsas/"
        + "ospf:area-scope-lsa/ospf:version/ospf:ospfv2/"
        + "ospf:ospfv2/ospf:body/ospf:opaque/ospf:te-opaque/"
        + "ospf:link-tlv" {
    when "../../../../../../../../../../../../"
       + "rt:type = 'ospf:ospfv2'" {
      description
        "This augmentation is only valid for OSPFv2.";
    }
    description
      "Traffic Engineering Network-to-Router Sub-TLV.";
      leaf network-to-router-te-metric {
        type uint32;
        description "Network to Router TE metric.";
        reference
          "RFC 8042 - OSPF Two-Part Metric";
      }
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol/"
        + "ospf:ospf/ospf:areas/"
        + "ospf:area/ospf:database/"
        + "ospf:area-scope-lsa-type/ospf:area-scope-lsas/"
        + "ospf:area-scope-lsa/ospf:version/ospf:ospfv3/"
        + "ospf:ospfv3/ospf:body/ospfv3-te:ospfv3-intra-area-te/"
        + "ospfv3-te:link-tlv" {
    when "../../../../../../../../../../../"
       + "rt:type = 'ospf:ospfv3'" {
      description
        "This augmentation is only valid for OSPFv3.";
    }
    description
      "Traffic Engineering Network-to-Router Sub-TLV.";
      leaf network-to-router-te-metric {
        type uint32;
        description "Network to Router TE metric.";
        reference
          "RFC 8042 - OSPF Two-Part Metric";
      }
  }
}
<CODE ENDS>
      ]]></artwork>
    </figure>
  </t>

  </section>


  <section title="YANG Module for OSPF Graceful Link Shutdown">

    <t>This document defines a YANG module for OSPF Graceful Link Shutdown feature as
      defined in <xref target="RFC8379"/>. It is an augmentation of the OSPF
      base model. </t>

    <figure align="left">
      <artwork align="left">
module: ietf-ospf-graceful-link-shutdown
augment /rt:routing/rt:control-plane-protocols
       /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
       /ospf:interfaces/ospf:interface:
 +--rw graceful-link-shutdown
    +--rw enable?   boolean
augment /rt:routing/rt:control-plane-protocols
       /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
       /ospf:database/ospf:area-scope-lsa-type/ospf:area-scope-lsas
       /ospf:area-scope-lsa/ospf:version/ospf:ospfv2/ospf:ospfv2
       /ospf:body/ospf:opaque/ospf:extended-link-opaque
       /ospf:extended-link-tlv:
 +--ro graceful-link-shutdown-sub-tlv!
 +--ro remote-address-sub-tlv
 |  +--ro remote-address?   inet:ipv4-address
 +--ro local-remote-int-id-sub-tlv
    +--ro local-int-id?    uint32
    +--ro remote-int-id?   uint32
augment /rt:routing/rt:control-plane-protocols
       /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
       /ospf:database/ospf:area-scope-lsa-type/ospf:area-scope-lsas
       /ospf:area-scope-lsa/ospf:version/ospf:ospfv3/ospf:ospfv3
       /ospf:body/ospfv3-e-lsa:e-router/ospfv3-e-lsa:e-router-tlvs
       /ospfv3-e-lsa:link-tlv:
 +--ro graceful-link-shutdown-sub-tlv!

      </artwork>
    </figure>

        <t>
    <figure>
      <artwork><![CDATA[
<CODE BEGINS> file "ietf-ospf-graceful-link-shutdown@2020-10-31.yang"
module ietf-ospf-graceful-link-shutdown {
  yang-version 1.1;
  namespace
    "urn:ietf:params:xml:ns:yang:ietf-ospf-graceful-link-shutdown";

  prefix ospf-grace-linkdown;

  import ietf-inet-types {
    prefix "inet";
  }

  import ietf-routing {
    prefix "rt";
  }

  import ietf-ospf {
    prefix "ospf";
  }

  import ietf-ospfv3-extended-lsa {
    prefix "ospfv3-e-lsa";
  }

  organization
    "IETF LSR - Link State Routing Working Group";

  contact
     "WG Web:   <http://tools.ietf.org/wg/lsr>
      WG List:  <mailto:lsr@ietf.org>

      Author:   Yingzhen Qu
                <mailto:yqu@futurewei.com>
      Author:   Acee Lindem
                <mailto:acee@cisco.com>";

  description
    "This YANG module defines the configuration and operational
     state for OSPF Graceful Link Shutdown feature as defined
     in RFC 8379.

     This YANG model conforms to the Network Management
     Datastore Architecture (NDMA) as described in RFC 8342.

     Copyright (c) 2020 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX;
     see the RFC itself for full legal notices.";

  reference "RFC XXXX";

  revision 2020-10-31 {
    description
      "Initial version";
    reference
      "RFC XXXX: A YANG Data Model for OSPF.";
  }


  /* RFC 8379 */
  augment "/rt:routing/rt:control-plane-protocols/"
        + "rt:control-plane-protocol/ospf:ospf/"
        + "ospf:areas/ospf:area/ospf:interfaces/ospf:interface" {
    when "../../../../../rt:type = 'ospf:ospfv2' or "
       + "../../../../../rt:type = 'ospf:ospfv3'" {
      description
        "This augments the OSPF interface configuration
         when used.";
    }
    description
      "This augments the OSPF protocol interface
       configuration with segment routing.";

    container graceful-link-shutdown {
      leaf enable {
        type boolean;
        default false;
        description
          "Enable OSPF graceful link shutdown.";
      }
      description
        "OSPF Graceful Link Shutdown.";
    }
  }


  /* Database */
  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol/"
        + "ospf:ospf/ospf:areas/"
        + "ospf:area/ospf:database/"
        + "ospf:area-scope-lsa-type/ospf:area-scope-lsas/"
        + "ospf:area-scope-lsa/ospf:version/ospf:ospfv2/"
        + "ospf:ospfv2/ospf:body/ospf:opaque/"
        + "ospf:extended-link-opaque/ospf:extended-link-tlv" {
    when "../../../../../../../../../../../../"
       + "rt:type = 'ospf:ospfv2'" {
      description
        "This augmentation is only valid for OSPFv2.";
    }
    description
      "OSPF graceful link shutdown for OSPFv2 extended link TLV
       in type 10 opaque LSA.";

    container graceful-link-shutdown-sub-tlv {
      presence "Enable graceful link shutdown";
      description
        "Graceful-Link-Shutdown sub-TLV identifies the link as being
         gracefully shutdown.";
    }

    container remote-address-sub-tlv {
      leaf remote-address {
         type inet:ipv4-address;
         description
           "Remote IPv4 address used to identify a particular link
            on the remote side.";
      }
      description
        "This sub-TLV specifies the IPv4 address of the remote
         endpoint on the link.";
    }

    container local-remote-int-id-sub-tlv {
      leaf local-int-id {
         type uint32;
         description "Local interface ID.";
      }
      leaf remote-int-id {
         type uint32;
         description "Remote interface ID.";
      }
      description
        "This sub-TLV specifies Local and Remote Interface IDs.";
    }
  }

  augment "/rt:routing/"
       + "rt:control-plane-protocols/rt:control-plane-protocol/"
       + "ospf:ospf/ospf:areas/ospf:area/ospf:database/"
       + "ospf:area-scope-lsa-type/ospf:area-scope-lsas/"
       + "ospf:area-scope-lsa/ospf:version/ospf:ospfv3/"
       + "ospf:ospfv3/ospf:body/ospfv3-e-lsa:e-router"
       + "/ospfv3-e-lsa:e-router-tlvs/ospfv3-e-lsa:link-tlv" {
       when "'ospf:../../../../../../../../../"
         + "rt:type' = 'ospf:ospfv3'" {
         description
           "This augmentation is only valid for OSPFv3
            E-Router LSAs";
       }
    container graceful-link-shutdown-sub-tlv {
      presence "Enable graceful link shutdown";
      description
        "Graceful-Link-Shutdown sub-TLV identifies the link as being
         gracefully shutdown.";
    }
    description
      "Augment OSPFv3 Area scope router-link TLV.";
  }
}
<CODE ENDS>
      ]]></artwork>
    </figure>
  </t>

  </section>

    <section title="YANG Module for OSPF LLS Extenstion for Local Interface ID Advertisement">

    <t>This document defines a YANG module for OSPF Link-Local Signaling (LLS)
       Extensions for Local Interface ID Advertisement feature as
      defined in <xref target="RFC8510"/>. It is an augmentation of the OSPF
      base model. </t>

    <figure align="left">
      <artwork align="left">
module: ietf-ospf-lls-local-id
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf:
    +--rw lls-int-id
       +--rw enable?   boolean

      </artwork>
    </figure>

        <t>
    <figure>
      <artwork><![CDATA[
<CODE BEGINS> file "ietf-ospf-lls-local-id@2020-04-24.yang"
module ietf-ospf-lls-local-id {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-ospf-lls-local-id";

  prefix ospf-lls-localid;

  import ietf-routing {
    prefix "rt";
  }

  import ietf-ospf {
    prefix "ospf";
  }

  organization
    "IETF LSR - Link State Routing Working Group";

  contact
     "WG Web:   <http://tools.ietf.org/wg/lsr>
      WG List:  <mailto:lsr@ietf.org>

      Author:   Yingzhen Qu
                <mailto:yqu@futurewei.com>
      Author:   Acee Lindem
                <mailto:acee@cisco.com>";

  description
    "This YANG module defines the configuration and operational
    state for OSPF Link-Local Signaling (LLS) Extensions for Local
    Interface ID Advertisement feature as defined in RFC 8510.

     Copyright (c) 2019 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX;
     see the RFC itself for full legal notices.";

  reference "RFC XXXX";

  revision 2020-04-24 {
    description
      "Initial version";
    reference
      "RFC XXXX: A YANG Data Model for OSPF.";
  }

  augment "/rt:routing/rt:control-plane-protocols"
        + "/rt:control-plane-protocol/ospf:ospf" {
    when "../rt:type = 'ospf:ospfv2' or "
       + "../rt:type = 'ospf:ospfv3'" {
      description
        "This augments the OSPF routing protocol when used.";
    }
    description
      "This augments the OSPF protocol configuration
       to support LLS extesnions for interfacde ID as
       defined in RFC 8510.";
    container lls-int-id {
      leaf enable {
        type boolean;
        default false;
        description
          "Enable LLS to advertise local interface ID.";
      }
      description
        "OSPF LLS Extensions for interface ID.";
    }
  }
}
<CODE ENDS>
      ]]></artwork>
    </figure>
  </t>

  </section>

    <section title="YANG Module for OSPF Application-Specific Link Attributes">

    <t>This document defines a YANG module for OSPF Application-Specific
      Link Attributes feature as
      defined in <xref target="RFC8920"/>. It is an augmentation of the OSPF
      base model. </t>

          <figure align="left">
      <artwork align="left">
module: ietf-ospf-link-attr
augment /rt:routing/rt:control-plane-protocols
        /rt:control-plane-protocol/ospf:ospf:
  +--rw ospf-link-attr
     +--rw (link-attr-op-mode)
        +--:(legacy)
        |  +--rw legacy?         empty
        +--:(transition)
        |  +--rw transition?     empty
        +--:(app-specific)
           +--rw app-specific?   empty
augment /rt:routing/rt:control-plane-protocols
        /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
        /ospf:database/ospf:area-scope-lsa-type/ospf:area-scope-lsas
        /ospf:area-scope-lsa/ospf:version/ospf:ospfv2/ospf:ospfv2
        /ospf:body/ospf:opaque/ospf:extended-link-opaque
        /ospf:extended-link-tlv:
  +--ro application-specific-link-attributes-sub-tlvs
     +--ro asla-sub-tlvs* []
        +--ro sabm-length?                    uint8
        +--ro udabm-length?                   uint8
        +--ro sabm
        |  +--ro sabm-bits*   identityref
        +--ro udabm
        +--ro link-attributes-sub-sub-tlvs
           +--ro unknown-tlvs
              +--ro unknown-tlv* []
                 +--ro type?     uint16
                 +--ro length?   uint16
                 +--ro value?    yang:hex-string
augment /rt:routing/rt:control-plane-protocols
        /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
        /ospf:database/ospf:area-scope-lsa-type/ospf:area-scope-lsas
        /ospf:area-scope-lsa/ospf:version/ospf:ospfv3/ospf:ospfv3
        /ospf:body/ospfv3-e-lsa:e-router/ospfv3-e-lsa:e-router-tlvs
        /ospfv3-e-lsa:link-tlv:
  +--ro application-specific-link-attributes-sub-tlvs
     +--ro asla-sub-tlvs* []
        +--ro sabm-length?                    uint8
        +--ro udabm-length?                   uint8
        +--ro sabm
        |  +--ro sabm-bits*   identityref
        +--ro udabm
        +--ro link-attributes-sub-sub-tlvs
           +--ro unknown-tlvs
              +--ro unknown-tlv* []
                 +--ro type?     uint16
                 +--ro length?   uint16
                 +--ro value?    yang:hex-string
      </artwork>
    </figure>
        <t>
    <figure>
      <artwork><![CDATA[
<CODE BEGINS> file "ietf-ospf-link-attr@2020-10-31.yang"
module ietf-ospf-link-attr {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-ospf-link-attr";

  prefix ospf-link-attr;

  import ietf-routing {
    prefix "rt";
    reference "RFC 8349: A YANG Data Model for Routing
               Management (NMDA Version)";
  }

  import ietf-ospf {
    prefix "ospf";
  }

  import ietf-ospfv3-extended-lsa {
    prefix "ospfv3-e-lsa";
  }

  organization
    "IETF LSR - Link State Routing Working Group";

  contact
     "WG Web:   <http://tools.ietf.org/wg/lsr>
      WG List:  <mailto:lsr@ietf.org>

      Author:   Yingzhen Qu
                <mailto:yqu@futurewei.com>
      Author:   Acee Lindem
                <mailto:acee@cisco.com>
      Author:   Stephane Litkowski
                <mailto:slitkows.ietf@gmail.com>";

  description
    "This YANG module defines the configuration and operational
     state for OSPF application specific link attributes feature
     as defined in RFC xxxx.

     This YANG model conforms to the Network Management
     Datastore Architecture (NMDA) as described in RFC 8342.

     Copyright (c) 2020 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX;
     see the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";

  reference "RFC XXXX";

  revision 2020-10-31 {
    description
      "Initial version";
    reference
      "RFC XXXX: A YANG Data Model for OSPF application specific
      link attributes.";
  }

  identity sabm-bit {
    description
      "Base identity for sabm bits.";
  }

  identity rsvp-te-bit {
    base sabm-bit;
    description
      "R bit, RSVP-TE.";
  }

  identity sr-policy-bit {
    base sabm-bit;
    description
      "S bit, Segment Routing Policy.";
  }

  identity lfa-bit {
    base sabm-bit;
    description
      "F bit, Loop Free Alternate (LFA). Includes all LFA types.";
  }

  grouping application-specific-link-attributes-sub-tlvs {
    description
      "OSPF Application-Specific Link Attributes (ASLA) sub-TLV.
       The ASLA sub-TLV is a sub-TLV of the OSPFv2 Extended Link
       TLV [RFC7684] and OSPFv3 Router-Link TLV [RFC8362].";

    container application-specific-link-attributes-sub-tlvs {
      description "Application-Specific Link Attributes sub-TLV.";
      list asla-sub-tlvs {
        leaf sabm-length {
          type uint8;
          description
            "Standard Application Identifier Bit Mask Length in
             octets.";
        }
        leaf udabm-length {
          type uint8;
          description
          "User Defined Application Identifier Bit Mask Length
          in octets.";
        }
        container sabm {
          leaf-list sabm-bits {
            type identityref {
              base sabm-bit;
            }
            description
              "SABM bits list. This list will contain
               identities for the bits which are set in the
               SABA bits.";
          }
          description
            "Standard Application Identifier Bit Mask.";
        }
        container udabm {
          description
            "User Defined Application Identifier Bit Mask.
             This container is to be augmented by user defined
             applications.";
        }
        container link-attributes-sub-sub-tlvs {
          uses ospf:unknown-tlvs;
          description
            "Link Attributes sub-sub-TLVs.";
        }
        description
          "List of application-Specific Link Attributes sub-TLVs.";
      }
    }
  }

  augment "/rt:routing/rt:control-plane-protocols"
        + "/rt:control-plane-protocol/ospf:ospf" {
    when "../rt:type = 'ospf:ospfv2' or "
       + "../rt:type = 'ospf:ospfv3'" {
      description
        "This augments the OSPF routing protocol when used.";
    }
    description
      "This augments OSPF protocol configuration
       with application-specific link attributes.";

    container ospf-link-attr {
      choice link-attr-op-mode {
        mandatory "true";
        leaf legacy {
          type empty;
          description
            "Only send legacy advertisements.";
        }
        leaf transition {
          type empty;
          description
            "Send both application-specific and legacy
             advertisements.";
        }
        leaf app-specific{
          type empty;
          description
            "Only send application-specific advertisements.";
        }
        description
          "Link attributes mode";
      }
      description
        "Link attributes operation mode.";
    }
  }

  /* Database */
  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol/"
        + "ospf:ospf/ospf:areas/"
        + "ospf:area/ospf:database/"
        + "ospf:area-scope-lsa-type/ospf:area-scope-lsas/"
        + "ospf:area-scope-lsa/ospf:version/ospf:ospfv2/"
        + "ospf:ospfv2/ospf:body/ospf:opaque/"
        + "ospf:extended-link-opaque/ospf:extended-link-tlv" {
    when "../../../../../../../../../../../../"
       + "rt:type = 'ospf:ospfv2'" {
      description
        "This augmentation is only valid for OSPFv2.";
    }
    description
      "OSPF Application-Specific Link Attributes (ASLA) sub-TLV is
       a sub-TLV of OSPFv2 Extended Link TLV (RFC7684).";

    uses application-specific-link-attributes-sub-tlvs;
  }

  augment "/rt:routing/"
       + "rt:control-plane-protocols/rt:control-plane-protocol/"
       + "ospf:ospf/ospf:areas/ospf:area/ospf:database/"
       + "ospf:area-scope-lsa-type/ospf:area-scope-lsas/"
       + "ospf:area-scope-lsa/ospf:version/ospf:ospfv3/"
       + "ospf:ospfv3/ospf:body/ospfv3-e-lsa:e-router"
       + "/ospfv3-e-lsa:e-router-tlvs/ospfv3-e-lsa:link-tlv" {
       when "'ospf:../../../../../../../../../"
         + "rt:type' = 'ospf:ospfv3'" {
         description
           "This augmentation is only valid for OSPFv3
            E-Router LSAs";
       }
    description
      "Augment OSPFv3 Area scope router-link TLV.";

    uses application-specific-link-attributes-sub-tlvs;
  }
}
  <CODE ENDS>
      ]]></artwork>
    </figure>
  </t>

    </section>

  <section title="YANG Module for OSPF Flexible Algorithm">
    <t>This document defines a YANG module for OSPF Flexible
      Algorithm as defined in <xref target="I-D.ietf-lsr-flex-algo"/>. It is an augmentation of the OSPF
      base model. </t>

    <figure align="left">
      <artwork align="left">
module: ietf-ospf-flex-algo
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf:
    +--rw ospf-flex-algo
       +--rw flex-algo* [algo-number]
          +--rw algo-number             uint8
          +--rw advertise-definition?   boolean
          +--rw admin-groups {te-types:extended-admin-groups,
                              te-types:named-extended-admin-groups}?
          |  +--rw exclude-admin-groups*  -> /te:te/globals
                                             /named-admin-groups
                                             /named-admin-group/name
          |  +--rw include-any-admin-groups*   -> /te:te/globals
                                             /named-admin-groups
                                             /named-admin-group/name
          |  +--rw include-all-admin-groups*   -> /te:te/globals
                                             /named-admin-groups
                                             /named-admin-group/name
          +--rw exclude-srlgs*          -> /te:te/globals/named-srlgs
                                           /named-srlg/name 
                                           {te-types:named-srlg-groups}?
          +--rw fast-reroute?           boolean
          +--rw metric-type?            identityref
          +--rw microloop-avoidance?    boolean
          +--rw prefix-metric!
          +--rw priority?               uint8
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
          /ospf:interfaces/ospf:interface/ospf:database
          /ospf:link-scope-lsa-type/ospf:link-scope-lsas
          /ospf:link-scope-lsa/ospf:version/ospf:ospfv2/ospf:ospfv2
          /ospf:body/ospf:opaque/ospf:ri-opaque:
    +--ro fad-tlvs
       +--ro fad-tlv* []
          +--ro flex-algo?              uint8
          +--ro metric-type?            identityref
          +--ro calc-type?              uint8
          +--ro priority?               uint8
          +--ro fa-ex-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fa-in-any-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fa-in-all-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fad-flags-sub-tlv
          |  +--ro fad-flags*   identityref
          +--ro fa-ex-srlg-sub-tlv
          |  +--ro srlgs*   uint32
          +--ro unknown-tlvs
             +--ro unknown-tlv* []
                +--ro type?     uint16
                +--ro length?   uint16
                +--ro value?    yang:hex-string
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
          /ospf:database/ospf:area-scope-lsa-type/ospf:area-scope-lsas
          /ospf:area-scope-lsa/ospf:version/ospf:ospfv2/ospf:ospfv2
          /ospf:body/ospf:opaque/ospf:ri-opaque:
    +--ro fad-tlvs
       +--ro fad-tlv* []
          +--ro flex-algo?              uint8
          +--ro metric-type?            identityref
          +--ro calc-type?              uint8
          +--ro priority?               uint8
          +--ro fa-ex-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fa-in-any-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fa-in-all-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fad-flags-sub-tlv
          |  +--ro fad-flags*   identityref
          +--ro fa-ex-srlg-sub-tlv
          |  +--ro srlgs*   uint32
          +--ro unknown-tlvs
             +--ro unknown-tlv* []
                +--ro type?     uint16
                +--ro length?   uint16
                +--ro value?    yang:hex-string
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:database
          /ospf:as-scope-lsa-type/ospf:as-scope-lsas/ospf:as-scope-lsa
          /ospf:version/ospf:ospfv2/ospf:ospfv2/ospf:body/ospf:opaque
          /ospf:ri-opaque:
    +--ro fad-tlvs
       +--ro fad-tlv* []
          +--ro flex-algo?              uint8
          +--ro metric-type?            identityref
          +--ro calc-type?              uint8
          +--ro priority?               uint8
          +--ro fa-ex-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fa-in-any-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fa-in-all-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fad-flags-sub-tlv
          |  +--ro fad-flags*   identityref
          +--ro fa-ex-srlg-sub-tlv
          |  +--ro srlgs*   uint32
          +--ro unknown-tlvs
             +--ro unknown-tlv* []
                +--ro type?     uint16
                +--ro length?   uint16
                +--ro value?    yang:hex-string
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
          /ospf:interfaces/ospf:interface/ospf:database
          /ospf:link-scope-lsa-type/ospf:link-scope-lsas
          /ospf:link-scope-lsa/ospf:version/ospf:ospfv3/ospf:ospfv3
          /ospf:body/ospf:router-information:
    +--ro fad-tlvs
       +--ro fad-tlv* []
          +--ro flex-algo?              uint8
          +--ro metric-type?            identityref
          +--ro calc-type?              uint8
          +--ro priority?               uint8
          +--ro fa-ex-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fa-in-any-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fa-in-all-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fad-flags-sub-tlv
          |  +--ro fad-flags*   identityref
          +--ro fa-ex-srlg-sub-tlv
          |  +--ro srlgs*   uint32
          +--ro unknown-tlvs
             +--ro unknown-tlv* []
                +--ro type?     uint16
                +--ro length?   uint16
                +--ro value?    yang:hex-string
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
          /ospf:database/ospf:area-scope-lsa-type/ospf:area-scope-lsas
          /ospf:area-scope-lsa/ospf:version/ospf:ospfv3/ospf:ospfv3
          /ospf:body/ospf:router-information:
    +--ro fad-tlvs
       +--ro fad-tlv* []
          +--ro flex-algo?              uint8
          +--ro metric-type?            identityref
          +--ro calc-type?              uint8
          +--ro priority?               uint8
          +--ro fa-ex-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fa-in-any-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fa-in-all-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fad-flags-sub-tlv
          |  +--ro fad-flags*   identityref
          +--ro fa-ex-srlg-sub-tlv
          |  +--ro srlgs*   uint32
          +--ro unknown-tlvs
             +--ro unknown-tlv* []
                +--ro type?     uint16
                +--ro length?   uint16
                +--ro value?    yang:hex-string
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:database
          /ospf:as-scope-lsa-type/ospf:as-scope-lsas/ospf:as-scope-lsa
          /ospf:version/ospf:ospfv3/ospf:ospfv3/ospf:body
          /ospf:router-information:
    +--ro fad-tlvs
       +--ro fad-tlv* []
          +--ro flex-algo?              uint8
          +--ro metric-type?            identityref
          +--ro calc-type?              uint8
          +--ro priority?               uint8
          +--ro fa-ex-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fa-in-any-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fa-in-all-ag-sub-tlv
          |  +--ro extended-admin-groups*   uint64
          +--ro fad-flags-sub-tlv
          |  +--ro fad-flags*   identityref
          +--ro fa-ex-srlg-sub-tlv
          |  +--ro srlgs*   uint32
          +--ro unknown-tlvs
             +--ro unknown-tlv* []
                +--ro type?     uint16
                +--ro length?   uint16
                +--ro value?    yang:hex-string
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
          /ospf:interfaces/ospf:interface/ospf:database
          /ospf:link-scope-lsa-type/ospf:link-scope-lsas
          /ospf:link-scope-lsa/ospf:version/ospf:ospfv2/ospf:ospfv2
          /ospf:body/ospf:opaque/ospf:extended-prefix-opaque
          /ospf:extended-prefix-tlv:
    +--ro fapm-sub-tlvs
       +--ro fapm-sub-tlv* []
          +--ro flex-algo?    uint8
          +--ro fapm-flags*   identityref
          +--ro metric?       uint32
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
          /ospf:database/ospf:area-scope-lsa-type/ospf:area-scope-lsas
          /ospf:area-scope-lsa/ospf:version/ospf:ospfv2/ospf:ospfv2
          /ospf:body/ospf:opaque/ospf:extended-prefix-opaque
          /ospf:extended-prefix-tlv:
    +--ro fapm-sub-tlvs
       +--ro fapm-sub-tlv* []
          +--ro flex-algo?    uint8
          +--ro fapm-flags*   identityref
          +--ro metric?       uint32
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:database
          /ospf:as-scope-lsa-type/ospf:as-scope-lsas/ospf:as-scope-lsa
          /ospf:version/ospf:ospfv2/ospf:ospfv2/ospf:body/ospf:opaque
          /ospf:extended-prefix-opaque/ospf:extended-prefix-tlv:
    +--ro fapm-sub-tlvs
       +--ro fapm-sub-tlv* []
          +--ro flex-algo?    uint8
          +--ro fapm-flags*   identityref
          +--ro metric?       uint32
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
          /ospf:database/ospf:area-scope-lsa-type/ospf:area-scope-lsas
          /ospf:area-scope-lsa/ospf:version/ospf:ospfv3/ospf:ospfv3
          /ospf:body/ospfv3-e-lsa:e-inter-area-prefix
          /ospfv3-e-lsa:e-inter-prefix-tlvs
          /ospfv3-e-lsa:inter-prefix-tlv:
    +--ro fapm-sub-tlvs
       +--ro fapm-sub-tlv* []
          +--ro flex-algo?    uint8
          +--ro fapm-flags*   identityref
          +--ro metric?       uint32
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:database
          /ospf:as-scope-lsa-type/ospf:as-scope-lsas/ospf:as-scope-lsa
          /ospf:version/ospf:ospfv3/ospf:ospfv3/ospf:body
          /ospfv3-e-lsa:e-as-external/ospfv3-e-lsa:e-external-tlvs
          /ospfv3-e-lsa:external-prefix-tlv:
    +--ro fapm-sub-tlvs
       +--ro fapm-sub-tlv* []
          +--ro flex-algo?    uint8
          +--ro fapm-flags*   identityref
          +--ro metric?       uint32
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
          /ospf:database/ospf:area-scope-lsa-type/ospf:area-scope-lsas
          /ospf:area-scope-lsa/ospf:version/ospf:ospfv2/ospf:ospfv2
          /ospf:body/ospf:opaque:
    +--ro eia-asbr-opaque
       +--ro eia-asbr-tlv
       |  +--ro asbr-rtr-id?     rt-types:router-id
       |  +--ro faam-sub-tlvs
       |  |  +--ro faam-sub-tlv* []
       |  |     +--ro flex-algo?   uint8
       |  |     +--ro metric?      uint32
       |  +--ro unknown-tlvs
       |     +--ro unknown-tlv* []
       |        +--ro type?     uint16
       |        +--ro length?   uint16
       |        +--ro value?    yang:hex-string
       +--ro unknown-tlvs
          +--ro unknown-tlv* []
             +--ro type?     uint16
             +--ro length?   uint16
             +--ro value?    yang:hex-string
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
          /ospf:database/ospf:area-scope-lsa-type/ospf:area-scope-lsas
          /ospf:area-scope-lsa/ospf:version/ospf:ospfv3/ospf:ospfv3
          /ospf:body/ospfv3-e-lsa:e-inter-area-router
          /ospfv3-e-lsa:e-inter-router-tlvs
          /ospfv3-e-lsa:inter-router-tlv:
    +--ro faam-sub-tlvs
       +--ro faam-sub-tlv* []
          +--ro flex-algo?   uint8
          +--ro metric?      uint32
      </artwork>
    </figure>
       <t>
          <figure>
      <artwork><![CDATA[
<CODE BEGINS> file "ietf-ospf-flex-algo@2021-06-18.yang"
module ietf-ospf-flex-algo {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-ospf-flex-algo";
  prefix ospf-flex-algo;

  import ietf-routing {
    prefix rt;
    reference "RFC 8349: A YANG Data Model for Routing
               Management (NMDA Version)";
  }

  import ietf-routing-types {
    prefix "rt-types";
    reference "RFC 8294: Common YANG Data Types for the
               Routing Area";
  }

  import ietf-te-types {
    prefix te-types;
    reference
      "RFC8776: Common YANG Data Types for Traffic Engineering.";
  }

  import ietf-ospf {
    prefix "ospf";
  }

  import ietf-ospfv3-extended-lsa {
    prefix "ospfv3-e-lsa";
  }

  import ietf-te {
    prefix "te";
  }

  organization
    "IETF LSR - Link State Routing Working Group";
  contact
    "WG Web:   <https://tools.ietf.org/wg/spring/>
     WG List:  <mailto:spring@ietf.org>


     Author:    Yingzhen Qu
               <mailto:yingzhen.qu@futurewei.com>
     Author:    Acee Lindem
               <mailto:acee@cisco.com>
     Author:    Stephane Litkowski
               <mailto:slitkows.ietf@gmail.com>
    ";

  description
    "The YANG module defines the configuration and operational
     state for OSPF Flexible Algorithm as defined in RFC xxxx.

     This YANG model conforms to the Network Management
     Datastore Architecture (NMDA) as described in RFC 8342.

     Copyright (c) 2021 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX;
     see the RFC itself for full legal notices.

     The key words 'MUST', 'MUST NOT', 'REQUIRED', 'SHALL', 'SHALL
     NOT', 'SHOULD', 'SHOULD NOT', 'RECOMMENDED', 'NOT RECOMMENDED',
     'MAY', and 'OPTIONAL' in this document are to be interpreted as
     described in BCP 14 (RFC 2119) (RFC 8174) when, and only when,
     they appear in all capitals, as shown here.";


  reference "RFC XXXX: YANG Data Model for OSPF Flexible Algorithm.";

  revision 2021-06-18 {
    description
      "Initial Version";
    reference "RFC XXXX: YANG Data Model for OSPF Flexible Algorithm.";
  }

  /* Identities */

  identity metric-type {
    description
      "Base identity for route metric types.";
  }

  identity igp-metric {
    base metric-type;
    description
      "Identity for the IGP metric type.";
  }

  identity min-uni-delay {
    base metric-type;
    description
      "Min unidirectional link delay metric type.";
    reference
      "RFC 7471 - OSPF Traffic Engineering (TE) Metric Extensions";
  }

  identity te-metric {
    base metric-type;
    description
      "Traffic engineering metric type.";
    reference
      "RFC 3630 - Traffic Engineering (TE) Extensions to OSPF 
                  Version 2";
  }

  identity fad-flags {
    description
      "Base identity for OSPF FAD flags.";
  }

  identity m-bit {
    base fad-flags;
    description
      "M bit, when set, the fex-algo specific prefix and ASBR
       metric MUST be used for inter-area and external prefix
       calculation.";
  }

  identity fapm-flags {
    description
      "Base identity for OSPF flex-algo prefix metric flags.";
  }

  identity e-bit {
    base fapm-flags;
    description
      "External metric, if set, the metric specified is a
       type 2 external metric.";
  }

  /* Groupings */
  grouping fa-ex-ag-sub-tlv {
    container fa-ex-ag-sub-tlv {
      leaf-list extended-admin-groups {
        type uint64;
        description
          "Extended administrative group as defined in RFC 7308.";
      }
      description
        "The flex-algo exclude admin group sub-tlv.";
    }
    description
      "The flex-algo exclude admin group sub-tlv.";
  }

  grouping fa-in-any-ag-sub-tlv {
    container fa-in-any-ag-sub-tlv {
      leaf-list extended-admin-groups {
        type uint64;
        description
          "Extended administrative group as defined in RFC 7308.";
      }
      description
        "The flex-algo include-any admin group sub-tlv."; 
    }
    description
      "The flex-algo include-any admin group sub-tlv.";
  }

  grouping fa-in-all-ag-sub-tlv {
    container fa-in-all-ag-sub-tlv {
      leaf-list extended-admin-groups {
        type uint64;
        description
          "Extended administrative group as defined in RFC 7308.";
      }
      description
        "The flex-algo include-all admin group sub-tlv.";
    }
    description
      "The flex-algo include-all admin group sub-tlv.";
  }

  grouping fad-flags-sub-tlv {
    container fad-flags-sub-tlv {
      leaf-list fad-flags {
        type identityref {
          base fad-flags;
        }
        description
          "Flex-algo definition flags list.";
      }
      description
        "OSPF flex-algo definition flags.";
    }
    description
      "The flex-algo definition flags sub-tlv.";
  }

  grouping fa-ex-srlg-sub-tlv {
    container fa-ex-srlg-sub-tlv {
      leaf-list srlgs {
        type uint32;
        description
          "SRLG value as defined in RFC 4203.";
      }
      description
        "The flex-algo exclude SRLG sub-tlv.";
    }
    description
      "The flex-algo exclude SRLG sub-tlv.";
  }

  grouping fad-tlvs {
    container fad-tlvs {
      list fad-tlv {
        leaf flex-algo {
          type uint8;
          description
            "Flex-algo number, value between 128 and 255 inclusive.";
        }
        leaf metric-type {
          type identityref {
            base metric-type;
          }
            description
              "Type of metric to be used during the calculation.";
        }
        leaf calc-type {
          type uint8 {
            range "0..127";
          }
          description
            "IGP algorithm types, value from 0 to 127 as
            defined under 'Interior Gateway Protocol (IGP)
            Parameter' by IANA.";
        }
        leaf priority {
          type uint8;
            description
              "Priority of the advertisement.";
        }

        uses fa-ex-ag-sub-tlv;
        uses fa-in-any-ag-sub-tlv;
        uses fa-in-all-ag-sub-tlv;
        uses fad-flags-sub-tlv;
        uses fa-ex-srlg-sub-tlv;
        uses ospf:unknown-tlvs;

        description
          "List of flex-algo definition TLVs.";
      }
      description
        "OSPF Flexible Algorithm Definition TLV.";
    }
    description
      "OSPF Flexible Algorithm Definition (FAD) TLV.";
  }

  grouping fapm-sub-tlvs {
    container fapm-sub-tlvs {
      list fapm-sub-tlv {
        leaf flex-algo {
          type uint8;
          description
            "Flex-algo number, value between 128 and 255
             inclusive.";
        }
        leaf-list fapm-flags {
          type identityref {
            base fapm-flags;
          }
          description
            "Flex-algo prefix metric flags list.";
        }
        leaf metric {
          type uint32;
          description
            "Prefix metric.";
        }
        description
          "List of flex-algo prefix sub-tlvs.";
      }
      description
        "Flex-algo prefix metric sub-tlvs.";
    }
    description
      "Flexible Algorithm Prefix Metric (FAPM) sub TLVs.";
  }

  grouping faam-sub-tlvs {
    container faam-sub-tlvs {
      list faam-sub-tlv {
        leaf flex-algo {
          type uint8;
          description
            "Flex-algo number, value between 128 and 255
             inclusive.";
        }
        leaf metric {
          type uint32;
          description
            "Prefix metric.";
        }
        description
          "List of faam sub-tlvs.";
      }
      description
         "Flexible Algorithm ASBR Metric (FAAM) Sub-TLVs.";
    }
    description
      "Flexible Algorithm ASBR Metric (FAAM) Sub-TLVs.";
  }

  /* Configurations */

  augment "/rt:routing/rt:control-plane-protocols"
     + "/rt:control-plane-protocol/ospf:ospf" {
    when "../rt:type = 'ospf:ospfv2' or "
       + "../rt:type = 'ospf:ospfv3'" {
      description
        "This augments the OSPF routing protocol when used.";
    }
    description
      "This augments OSPF protocol with Flexible
       Algorithm.";


    container ospf-flex-algo {
      list flex-algo {
        key "algo-number";

        leaf algo-number {
          type uint8 {
            range "128..255";
          }
          description
            "An identifier in the range 128-255 that's associated 
            with the Flexible Algorithm Definition.";
        }

        leaf advertise-definition {
          type boolean;
          default true;
          description
            "Enable to advertise the flex-algo definition.";
        }

        container admin-groups {
          if-feature "te-types:extended-admin-groups";
          if-feature "te-types:named-extended-admin-groups";
          leaf-list exclude-admin-groups {
            type leafref {
              path "/te:te/te:globals/te:named-admin-groups/"
                 + "te:named-admin-group/te:name";
            }
            description
              "Exclude rule used during the flex-algo 
              path computation.";
          }
          leaf-list include-any-admin-groups {
            type leafref {
              path "/te:te/te:globals/te:named-admin-groups/"
                 + "te:named-admin-group/te:name";
            }
            description
              "Include-any rule used during the flex-algo 
              path computation.";
          }          
          leaf-list include-all-admin-groups {
            type leafref {
              path "/te:te/te:globals/te:named-admin-groups/"
                 + "te:named-admin-group/te:name";
            }
            description
              "Include-all rule used during the flex-algo 
              path computation.";
          }
          description
            "Specify links for the flex-algo path computation.";
        }

        leaf-list exclude-srlgs {
          if-feature "te-types:named-srlg-groups";
          type leafref {
            path "/te:te/te:globals/te:named-srlgs/te:named-srlg/"
               + "te:name";
          }
          description
            "Shared Risk Link Groups (SRLGs) to be excluded during
            the flex-algo path computation.";
        }

        leaf fast-reroute {
          type boolean;
          default true;
          description
            "Enable fast reroute.";
        }

        leaf metric-type {
          type identityref {
            base metric-type;
          }
          description
            "Type of metric to be used during the calculation.";
        }

        leaf microloop-avoidance {
          type boolean;
          default true;
          description
            "Enable microloop avoidance.";
        }

        container prefix-metric {
          presence
            "Use flex-algo specific prefix metric.";
          description
            "Use flex-algo prefix metric.";
        }

        leaf priority {
          type uint8;
          description
            "Priority of the advertisement.";
        }

        description
          "List of flex-algo configurations.";
      }
      description 
        "Flexible Algorithm configuration.";
    }
  }

  /* Database */

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol/"
        + "ospf:ospf/ospf:areas/ospf:area/"
        + "ospf:interfaces/ospf:interface/ospf:database/"
        + "ospf:link-scope-lsa-type/ospf:link-scope-lsas/"
        + "ospf:link-scope-lsa/ospf:version/ospf:ospfv2/"
        + "ospf:ospfv2/ospf:body/ospf:opaque/ospf:ri-opaque" {
    when "../../../../../../../../../../../../../"
       + "rt:type = 'ospf:ospfv2'" {
      description
        "This augmentation is only valid for OSPFv2.";
    }

    description
      "Flex-algo definition TLVs for OSPFv2 type 9 opaque RI LSA.";

    uses fad-tlvs;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol/"
        + "ospf:ospf/ospf:areas/"
        + "ospf:area/ospf:database/"
        + "ospf:area-scope-lsa-type/ospf:area-scope-lsas/"
        + "ospf:area-scope-lsa/ospf:version/ospf:ospfv2/"
        + "ospf:ospfv2/ospf:body/ospf:opaque/ospf:ri-opaque" {
    when "../../../../../../../../../../../"
       + "rt:type = 'ospf:ospfv2'" {
      description
        "This augmentation is only valid for OSPFv2.";
    }

    description
      "Flex-algo definition TLVs for OSPFv2 type 10 opaque RI LSA.";

    uses fad-tlvs;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol/"
        + "ospf:ospf/ospf:database/"
        + "ospf:as-scope-lsa-type/ospf:as-scope-lsas/"
        + "ospf:as-scope-lsa/ospf:version/ospf:ospfv2/"
        + "ospf:ospfv2/ospf:body/ospf:opaque/ospf:ri-opaque" {
    when "../../../../../../../../../"
       + "rt:type = 'ospf:ospfv2'" {
      description
        "This augmentation is only valid for OSPFv2.";
    }
    description
      "Flex-algo definition TLVs for OSPFv2 type 11 opaque RI LSA.";

    uses fad-tlvs;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol/"
        + "ospf:ospf/ospf:areas/ospf:area/"
        + "ospf:interfaces/ospf:interface/ospf:database/"
        + "ospf:link-scope-lsa-type/ospf:link-scope-lsas/"
        + "ospf:link-scope-lsa/ospf:version/ospf:ospfv3/"
        + "ospf:ospfv3/ospf:body/ospf:router-information" {
    when "../../../../../../../../../../../../"
       + "rt:type = 'ospf:ospfv3'" {
      description
        "This augmentation is only valid for OSPFv3.";
    }

    description
      "Flex-algo definition TLVs for OSPFv3 Router Information LSA.";

    uses fad-tlvs;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol/"
        + "ospf:ospf/ospf:areas/"
        + "ospf:area/ospf:database/"
        + "ospf:area-scope-lsa-type/ospf:area-scope-lsas/"
        + "ospf:area-scope-lsa/ospf:version/ospf:ospfv3/"
        + "ospf:ospfv3/ospf:body/ospf:router-information" {
    when "../../../../../../../../../../"
       + "rt:type = 'ospf:ospfv3'" {
      description
        "This augmentation is only valid for OSPFv3.";
    }

    description
      "Flex-algo definition TLVs for OSPFv3 Router Information LSA.";

    uses fad-tlvs;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol/"
        + "ospf:ospf/ospf:database/"
        + "ospf:as-scope-lsa-type/ospf:as-scope-lsas/"
        + "ospf:as-scope-lsa/ospf:version/ospf:ospfv3/"
        + "ospf:ospfv3/ospf:body/ospf:router-information" {
    when "../../../../../../../../"
       + "rt:type = 'ospf:ospfv3'" {
      description
        "This augmentation is only valid for OSPFv3.";
    }
    description
      "Flex-algo definition TLVs for OSPFv3 Router Information LSA.";

    uses fad-tlvs;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol/"
        + "ospf:ospf/ospf:areas/ospf:area/"
        + "ospf:interfaces/ospf:interface/ospf:database/"
        + "ospf:link-scope-lsa-type/ospf:link-scope-lsas/"
        + "ospf:link-scope-lsa/ospf:version/ospf:ospfv2/"
        + "ospf:ospfv2/ospf:body/ospf:opaque/"
        + "ospf:extended-prefix-opaque/ospf:extended-prefix-tlv" {
    when "../../../../../../../../../../../../../../"
       + "rt:type = 'ospf:ospfv2'" {
      description
        "This augmentation is only valid for OSPFv2.";
    }
    description
      "Flex-algo prefix metric sub TLVs for OSPFv2 extended prefix TLV
       in type 9 opaque LSA.";
    uses fapm-sub-tlvs;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol/"
        + "ospf:ospf/ospf:areas/"
        + "ospf:area/ospf:database/"
        + "ospf:area-scope-lsa-type/ospf:area-scope-lsas/"
        + "ospf:area-scope-lsa/ospf:version/ospf:ospfv2/"
        + "ospf:ospfv2/ospf:body/ospf:opaque/"
        + "ospf:extended-prefix-opaque/ospf:extended-prefix-tlv" {
    when "../../../../../../../../../../../../"
       + "rt:type = 'ospf:ospfv2'" {
      description
        "This augmentation is only valid for OSPFv2.";
    }
    description
      "Flex-algo prefix metric sub TLVs for OSPFv2 extended prefix TLV
       in type 10 opaque LSA.";
    uses fapm-sub-tlvs;
  }

  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol/"
        + "ospf:ospf/ospf:database/"
        + "ospf:as-scope-lsa-type/ospf:as-scope-lsas/"
        + "ospf:as-scope-lsa/ospf:version/ospf:ospfv2/"
        + "ospf:ospfv2/ospf:body/ospf:opaque/"
        + "ospf:extended-prefix-opaque/ospf:extended-prefix-tlv" {
    when "../../../../../../../../../../"
       + "rt:type = 'ospf:ospfv2'" {
      description
        "This augmentation is only valid for OSPFv2.";
    }
    description
      "Flex-algo prefix metric sub TLVs for OSPFv2 extended prefix TLV
       in type 11 opaque LSA.";
    uses fapm-sub-tlvs;
  }

  /* Flex-algo prefix metric Sub-TLV in OSPFv3 Inter-Area Prefix TLV */
  augment "/rt:routing/"
    + "rt:control-plane-protocols/rt:control-plane-protocol/"
    + "ospf:ospf/ospf:areas/ospf:area/ospf:database/"
    + "ospf:area-scope-lsa-type/ospf:area-scope-lsas/"
    + "ospf:area-scope-lsa/ospf:version/ospf:ospfv3/"
    + "ospf:ospfv3/ospf:body/ospfv3-e-lsa:e-inter-area-prefix/"
    + "ospfv3-e-lsa:e-inter-prefix-tlvs/ospfv3-e-lsa:inter-prefix-tlv" {
    when "../../../../../../../../../../../../"
      + "rt:type = 'ospf:ospfv3'" {
      description
        "This augmentation is only valid for OSPFv3
         E-Router LSAs";
    }
    uses fapm-sub-tlvs;
    description
      "OSPFv3 Area-Scoped Inter-Area Prefix TLV.";
  }

  /* Flex-algo prefix metric Sub-TLV in OSPFv3 External Prefix TLV */
  augment "/rt:routing/"
    + "rt:control-plane-protocols/rt:control-plane-protocol/"
    + "ospf:ospf/ospf:database/"
    + "ospf:as-scope-lsa-type/ospf:as-scope-lsas/"
    + "ospf:as-scope-lsa/ospf:version/ospf:ospfv3/"
    + "ospf:ospfv3/ospf:body/ospfv3-e-lsa:e-as-external/"
    + "ospfv3-e-lsa:e-external-tlvs/ospfv3-e-lsa:external-prefix-tlv" {
    when "'ospf:../../../../../../../../../"
      + "rt:type' = 'ospf:ospfv3'" {
      description
        "This augmentation is only valid for OSPFv3.";
    }
    uses fapm-sub-tlvs;
    description
      "OSPFv3 AS-Scoped External Prefix TLV.";
  }

  /* OSPFv2 Extended Inter-Area ASBR LSA */
  augment "/rt:routing/"
        + "rt:control-plane-protocols/rt:control-plane-protocol/"
        + "ospf:ospf/ospf:areas/"
        + "ospf:area/ospf:database/"
        + "ospf:area-scope-lsa-type/ospf:area-scope-lsas/"
        + "ospf:area-scope-lsa/ospf:version/ospf:ospfv2/"
        + "ospf:ospfv2/ospf:body/ospf:opaque" {
    when "../../../../../../../../../../"
       + "rt:type = 'ospf:ospfv2'" {
      description
        "This augmentation is only valid for OSPFv2.";
    }
    description
      "OSPFv2 Extended Inter-Area ASBR LSA in type 10 
      opaque LSA.";
    
    container eia-asbr-opaque {
      container eia-asbr-tlv {
        leaf asbr-rtr-id {
          type rt-types:router-id;
          description
            "The OSPF Router ID of the ASBR.";
        }
        uses faam-sub-tlvs;
        uses ospf:unknown-tlvs;
        description
          "EIA-ASBR TLV, used to advertise additional attributes
           associated with the reachability of an ASBR.";
      }
      uses ospf:unknown-tlvs;

      description
        "OSPFv2 Extended Inter-Area (EIA-ASBR) opaque LSA.";
    }
  }

  /* FAAM Sub-TLV in OSPFv3 Inter-Area-Router TLV */
  augment "/rt:routing/"
    + "rt:control-plane-protocols/rt:control-plane-protocol/"
    + "ospf:ospf/ospf:areas/ospf:area/ospf:database/"
    + "ospf:area-scope-lsa-type/ospf:area-scope-lsas/"
    + "ospf:area-scope-lsa/ospf:version/ospf:ospfv3/"
    + "ospf:ospfv3/ospf:body/ospfv3-e-lsa:e-inter-area-router/"
    + "ospfv3-e-lsa:e-inter-router-tlvs/"
    + "ospfv3-e-lsa:inter-router-tlv" {
    when "../../../../../../../../../../../../"
      + "rt:type = 'ospf:ospfv3'" {
      description
        "This augmentation is only valid for OSPFv3
         Inter-Area-Router TLV.";
    }
    uses faam-sub-tlvs;
    description
      "OSPFv3 Area-Scoped Inter-Area-Router TLV.";
  }
}
        <CODE ENDS>
      ]]></artwork>
    </figure>
  </t>

    </section>

    <section anchor="Security" title="Security Considerations">
    <t>The YANG modules specified in this document define a schema for
       data that is designed to be accessed via network
       management protocols such as NETCONF <xref target="RFC6241"/> or
       RESTCONF <xref target="RFC8040"/>. The lowest NETCONF layer is the secure transport
       layer, and the mandatory-to-implement secure transport is Secure Shell (SSH)
       <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the
       mandatory-to-implement secure transport is TLS <xref target="RFC5246"/>.</t>

   <t>The NETCONF access control model <xref target="RFC6536"/> provides the
      means to restrict access for particular NETCONF or RESTCONF users to a
      pre-configured subset of all available NETCONF or RESTCONF protocol
      operations and content.</t>

   <t>There are a number of data nodes defined in the modules
      that are writable/creatable/deletable (i.e., config true, which is the default).
      These data nodes may be considered sensitive or vulnerable in some network
      environments. Write operations (e.g., edit-config) to these data nodes without
      proper protection can have a negative effect on network operations. </t>

   <t>Some of the readable data nodes in the modules
      may be considered sensitive or vulnerable in some network environments. It is thus
      important to control read access (e.g., via get, get-config, or notification)
      to these data nodes. The exposure of the Link State Database (LSDB) will
      expose the detailed topology of the network. This may be undesirable since
      both due to the fact that exposure may facilitate other attacks. Additionally,
      network operators may consider their topologies to be sensitive confidential
      data.</t>

   </section>
<section title="IANA Considerations">
<t>This document registers URIs in the IETF XML registry
   <xref target="RFC3688"/>.  Following the format in <xref target="RFC3688"/>,
   the following registrations is requested to be made:
   <figure>
   <artwork>
   URI: urn:ietf:params:xml:ns:yang:ietf-ospfv3-te
   Registrant Contact: The IESG.
   XML: N/A, the requested URI is an XML namespace.
   </artwork>
   </figure>
   <figure>
   <artwork>
   URI: urn:ietf:params:xml:ns:yang:ietf-ospf-two-metric
   Registrant Contact: The IESG.
   XML: N/A, the requested URI is an XML namespace.
   </artwork>
   </figure>
   <figure>
   <artwork>
   URI: urn:ietf:params:xml:ns:yang:ietf-ospf-grace-linkdown
   Registrant Contact: The IESG.
   XML: N/A, the requested URI is an XML namespace.
   </artwork>
   </figure>
   <figure>
   <artwork>
   URI: urn:ietf:params:xml:ns:yang:ietf-ospf-lls-localid
   Registrant Contact: The IESG.
   XML: N/A, the requested URI is an XML namespace.
   </artwork>
   </figure>
   <figure>
   <artwork>
   URI: urn:ietf:params:xml:ns:yang:ietf-ospf-link-attr
   Registrant Contact: The IESG.
   XML: N/A, the requested URI is an XML namespace.
   </artwork>
   </figure>
   <figure>
   <artwork>
   URI: urn:ietf:params:xml:ns:yang:ietf-ospf-flex-algo
   Registrant Contact: The IESG.
   XML: N/A, the requested URI is an XML namespace.
   </artwork>
   </figure>
</t>
   <t>This document registers the YANG modules in the YANG Module Names
   registry <xref target="RFC6020"/>.
   <figure>
   <artwork>
   name: ietf-ospfv3-te
   namespace: urn:ietf:params:xml:ns:yang:ietf-ospfv3-te
   prefix: ospfv3-te
   reference: RFC XXXX
   </artwork>
   </figure>
   <figure>
   <artwork>
   name: ietf-ospf-two-metric
   namespace: urn:ietf:params:xml:ns:yang:ietf-ospf-two-metric
   prefix: ospf-two-metric
   reference: RFC XXXX
   </artwork>
   </figure>
   <figure>
   <artwork>
   name: ietf-ospf-grace-linkdown
   namespace: urn:ietf:params:xml:ns:yang:ietf-ospf-grace-linkdown
   prefix: ospf-grace-linkdown
   reference: RFC XXXX
   </artwork>
   </figure>
   <figure>
   <artwork>
   name: ietf-ospf-lls-localid
   namespace: urn:ietf:params:xml:ns:yang:ietf-ospf-lls-localid
   prefix: ospf-lls-localid
   reference: RFC XXXX
   </artwork>
   </figure>
   <figure>
   <artwork>
   name: ietf-ospf-link-attr
   namespace: urn:ietf:params:xml:ns:yang:ietf-ospf-link-attr
   prefix: ospf-link-attr
   reference: RFC XXXX
   </artwork>
   </figure>
   <figure>
   <artwork>
   name: ietf-ospf-flex-algo
   namespace: urn:ietf:params:xml:ns:yang:ietf-ospf-flex-algo
   prefix: ospf-flex-algo
   reference: RFC XXXX
   </artwork>
   </figure>
   </t>
</section>
    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>This document was produced using Marshall Rose's xml2rfc tool.</t>
      <t>The YANG model was developed using the suite of YANG tools written
         and maintained by numerous authors.</t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      &RFC2119;
      &RFC3688;
      &RFC5246;
      &RFC5329;
      &RFC6020;
      &RFC6241;
      &RFC6242;
      &RFC6536;
      &RFC7950;
      &RFC8022;
      &RFC8040;
      &RFC8042;
      &RFC8349;
      &RFC8379;
      &RFC8510;
      &RFC8920;
      &I-D.ietf-ospf-yang;
      &I-D.ietf-lsr-flex-algo;
    </references>
  </back>
</rfc>
